1. Надо решить: писать ли класс Connection для создания подключения к базе данных? Можно объект PDO пробросить сразу в конструктор QueryBuilder. Ладно, сделаем обертку над PDO - Connection. Она будет решать: откуда принимать параметры БД и выдавать объект PDO. В этой minimal версии параметры будем передавать вручную.
2. Далее сделаем CRUD обыкновенный, т.е. налепим заготовок для методов
- getAll()
- getOne()
- create()
- update()
- delete()

Свойство $pdo - сделаем приватным, т.к. снаружи он не понадобится
3. Метод getAll будет принимать имя таблицы и выдавать ассоциативный массив всего чего найдет
4. Для getOne тоже нужно будет имя таблицы и ещё id. Тут тоже вроде все просто: таблицу передадим по переменной, а id через ссылку :id, вернем тоже ассоциативный массив, указав PDO::FETCH_ASSOC.
5. Для метода create() нужно передать таблицу и ассоциативный массив 'поле таблицы' => 'значение', далее формируем строку из массива ключей(того массива что получили) через разделитель ',' также формируем строку из массива ключей вида ':' . $ключ . ', :'... вставляем получивлщиеся строки в sql подготовленный запрос, выполняем и на всякий случай вернем id вставленного объекта или false в случае неудачи.
6. Для UPDATE нужно передать таблицу, поля с данными и id, из массива создать строку формата '$key=:$key, ', добавим 'id' => $id в массив чтобы одним разом подставить массив в execute()
7. Ломать не строить, поэтому метод delete простой. Передаём ему таблицу и id который надо удалить.


